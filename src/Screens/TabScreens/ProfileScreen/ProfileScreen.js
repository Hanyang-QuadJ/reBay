import React, { Component } from "react";
import { connect } from "react-redux";
import {
  AsyncStorage,
  View,
  FlatList,
  TouchableOpacity,
  ActivityIndicator,
  InteractionManager,
  Image
} from "react-native";
import { Container, Content, Icon, Button, Text } from "native-base";
import styles from "./style";
import * as commonStyle from "../../../Constants/commonStyle";
import * as LoginAction from "../../../Actions/LoginAction";
import * as ItemAction from "../../../Actions/ItemAction";
import { GoToHome } from "../../index";

const mapStateToProps = state => {
  return {
    me: state.LoginReducer.me
  };
};

class ProfileScreen extends Component {
  static navigatorStyle = commonStyle.NavigationStyleReverse;

  constructor(props) {
    super(props);
    this.state = {};
    this.props.navigator.setOnNavigatorEvent(this.onNavigatorEvent.bind(this));
  }

  onNavigatorEvent(event) {
    // this is the onPress handler for the two buttons together
  }

  signOut = () => {
    this.props.dispatch(LoginAction.signOut()).then(value => {
      this.props.navigator.resetTo({
        screen: "Init", // unique ID registered with Navigation.registerScreen
        animated: false, // does the resetTo have transition animation or does it happen immediately (optional)
        animationType: "fade", // 'fade' (for both) / 'slide-horizontal' (for android) does the resetTo have different transition animation (optional)
        navigatorStyle: {
          tabBarHidden: true
        } // override the navigator style for the pushed screen (optional)
      });
    });
  };

  //   testNotify = () => {
  //     PushNotification.localNotification({
  //       /* Android Only Properties */
  //       id: "0", // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
  //       ticker: "My Notification Ticker", // (optional)
  //       autoCancel: true, // (optional) default: true
  //       largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
  //       smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
  //       bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
  //       subText: "This is a subText", // (optional) default: none
  //       color: "red", // (optional) default: system default
  //       vibrate: true, // (optional) default: true
  //       vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
  //       tag: "some_tag", // (optional) add tag to message
  //       group: "group", // (optional) add group to message
  //       ongoing: false, // (optional) set whether this is an "ongoing" notification

  //       /* iOS only properties */
  //       alertAction: "view", // (optional) default: view
  //       category: null,
  //       userInfo: null, // (optional) default: null (object containing additional notification data)

  //       /* iOS and Android properties */
  //       title: "안녕!", // (optional)
  //       message: "리베이 알림 테스트", // (required)
  //       playSound: true, // (optional) default: true
  //       soundName: "default", // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
  //       number: "10", // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
  //       repeatType: "day", // (Android only) Repeating interval. Could be one of `week`, `day`, `hour`, `minute, `time`. If specified as time, it should be accompanied by one more parameter 'repeatTime` which should the number of milliseconds between each interval
  //       actions: '["Yes", "No"]' // (Android only) See the doc for notification actions to know more
  //     });
  //   };
  opt1 = () => {
    const params = { props: this.props };
    this.props.dispatch(ItemAction.buyItem(params));
  };

  opt2 = () => {
    this.props.navigator.push({
      screen: "Opt2",
      title: "구매내역",
      passProps: {}
    });
  };

  opt3 = () => {
    this.props.navigator.push({
      screen: "Opt3",
      title: "판매내역",
      passProps: {}
    });
  };
  opt4 = () => {
    this.props.navigator.push({
      screen: "Opt4",
      title: "문의내역",
      passProps: {}
    });
  };
  opt5 = () => {
    this.props.navigator.push({
      screen: "Opt5",
      title: "임시저장내역",
      passProps: {}
    });
  };
  opt6 = () => {
    this.props.navigator.push({
      screen: "Opt6",
      title: "리베이 프로모션",
      passProps: {}
    });
  };
  opt7 = () => {
    this.props.navigator.push({
      screen: "Opt7",
      title: "리베이에 문의하기",
      passProps: {}
    });
  };
  opt8 = () => {
    this.props.navigator.push({
      screen: "Opt8",
      title: "푸쉬알림",
      passProps: {}
    });
  };
  opt9 = () => {
    this.props.navigator.push({
      screen: "Opt9",
      title: "이용약관",
      passProps: {}
    });
  };
  opt10 = () => {
    this.props.navigator.push({
      screen: "Opt10",
      title: "업데이트 정보",
      passProps: {}
    });
  };
  render() {
    const { me } = this.props;

    return (
      <Container>
        <Content>
          <View style={styles.header}>
            <View style={styles.userInfo}>
              <Text style={styles.userName}>{me.username}</Text>
              <Text style={styles.userGrade}>실버회원</Text>
            </View>
            <View style={styles.picArea}>
              <Image
                style={styles.thumbnail}
                source={{ url: me.profile_img }}
              />
            </View>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt1}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>등록정보</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt2}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>구매내역</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt3}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>판매내역</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt4}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>문의내역</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt5}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>임시저장내역</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt6}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>리베이 프로모션</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt7}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>리베이에 문의하기</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt8}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>푸쉬알림</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity style={styles.option_wrapper} onPress={this.opt9}>
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>이용약관</Text>
            </TouchableOpacity>
          </View>
          <View style={styles.option}>
            <TouchableOpacity
              style={styles.option_wrapper}
              onPress={this.opt10}
            >
              <View>
                <Icon style={styles.option__icon} name="ios-settings" />
              </View>
              <Text style={styles.option__text}>업데이트 정보</Text>
            </TouchableOpacity>
          </View>
        </Content>
      </Container>
    );
  }
}

export default (ProfileScreen = connect(mapStateToProps)(ProfileScreen));
